# 설치
  # helm upgrade --install ingress-nginx ingress-nginx \
  # --repo https://kubernetes.github.io/ingress-nginx \
  # --namespace ingress-nginx --create-namespace

  #  helm upgrade --install ingress-nginx ingress-nginx \
  #   --repo https://kubernetes.github.io/ingress-nginx \
  #   --namespace pet --create-namespace

# 실행
# helm show values ingress-nginx --repo https://kubernetes.github.io/ingress-nginx

# kubectl -n ingress-nginx get pod -o yaml

# apiVersion: networking.k8s.io/v1      # v1.20 이전

---
apiVersion: v1
kind: Namespace
metadata:
  name: pet
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: pet
  name: pet-ingress
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /cat
            pathType: Prefix
            backend:
              service:
                name: my-cat-service
                port:
                  number: 8080
#          - path: /dog
#            pathType: Prefix
#            backend:
#              service:
#                name: my-dog-service
#                port:
#                  number: 8080
---
apiVersion: v1
kind: Service
metadata:
  namespace: pet
  name: my-cat-service
spec:
  ports:
    - name: dog-port
      port: 8080
      targetPort: 8080
  selector:
    app:
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: pet
  name: my-cat-deployment
spec:
  replicas: 5
  selector:
    matchLabels:
      app: my-app                   #필드 내부에서 서비스가 연결할 컨테이너에 붙어 있는 레이블을 지정합니다. 이 예시에서는 app: my-app 레이블이 있는 컨테이너만 서비스에 연결됩니다.
  template:
    metadata:
      name: my-app
      labels:
        app: my-app
    spec:
      containers:
        - name: my-app-container
          image: my-app
          ports:
            - containerPort: 8080
          imagePullPolicy: Never  # cloud가 아닌 로컬 이미지
          # imagePullPolicy: Always  # :latest 일경우 최신화 항상 하기위한 옵션